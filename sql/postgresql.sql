/************ Update: Schemas ***************/

COMMENT ON SCHEMA public IS NULL;



/************ Add: Sequences ***************/

CREATE SEQUENCE bitacora_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE bitacora_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE credencial_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE credencial_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE dato_usuario_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE dato_usuario_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE usuario_credencial_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE usuario_credencial_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE usuario_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE usuario_id_seq IS 'DbWrench Autogenerated Sequence.';



/************ Update: Tables ***************/

/******************** Add Table: bitacora ************************/

/* Build Table Structure */
CREATE TABLE bitacora
(
	id INTEGER DEFAULT nextval('bitacora_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	usuario_id INTEGER NOT NULL,
	accion VARCHAR(20) NOT NULL,
	tabla VARCHAR(64) NOT NULL,
	registro INTEGER NULL,
	observacion VARCHAR(500) NULL
);

/* Add Primary Key */
ALTER TABLE bitacora ADD CONSTRAINT pkbitacora
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "bitacora_usuario_id_Idx" ON bitacora USING btree (usuario_id);


/******************** Add Table: credencial ************************/

/* Build Table Structure */
CREATE TABLE credencial
(
	id INTEGER DEFAULT nextval('credencial_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(50) NOT NULL,
	descripcion VARCHAR(140) NULL
);

/* Add Primary Key */
ALTER TABLE credencial ADD CONSTRAINT pkcredencial
	PRIMARY KEY (id);


/******************** Add Table: dato_usuario ************************/

/* Build Table Structure */
CREATE TABLE dato_usuario
(
	id INTEGER DEFAULT nextval('dato_usuario_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	usuario_id INTEGER NOT NULL,
	cedula VARCHAR(11) NOT NULL,
	nombre VARCHAR(80) NOT NULL,
	apellido VARCHAR(80) NOT NULL
);

/* Add Primary Key */
ALTER TABLE dato_usuario ADD CONSTRAINT pkdato_usuario
	PRIMARY KEY (id);

/* Add Indexes */
CREATE UNIQUE INDEX "dato_usuario_usuario_id_Idx" ON dato_usuario USING btree (usuario_id);


/******************** Add Table: usuario ************************/

/* Build Table Structure */
CREATE TABLE usuario
(
	id INTEGER DEFAULT nextval('usuario_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	usuario VARCHAR(50) NOT NULL,
	password VARCHAR(32) NOT NULL,
	estado BOOL DEFAULT 'TRUE' NOT NULL
);

/* Add Primary Key */
ALTER TABLE usuario ADD CONSTRAINT pkusuario
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN usuario.estado IS '1 = activado | 0 = inactivado';

/* Add Indexes */
CREATE INDEX "usuario_estado_Idx" ON usuario USING btree (estado);

CREATE UNIQUE INDEX "usuario_usuario_Idx" ON usuario USING btree (usuario);

CREATE INDEX "usuario_usuario_password_Idx" ON usuario USING btree (usuario, password);


/******************** Add Table: usuario_credencial ************************/

/* Build Table Structure */
CREATE TABLE usuario_credencial
(
	id INTEGER DEFAULT nextval('usuario_credencial_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	usuario_id INTEGER NOT NULL,
	credencial_id INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE usuario_credencial ADD CONSTRAINT pkusuario_credencial
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "usuario_credencial_credencial_id_Idx" ON usuario_credencial USING btree (credencial_id);

CREATE INDEX "usuario_credencial_usuario_id_Idx" ON usuario_credencial USING btree (usuario_id);

CREATE UNIQUE INDEX "usuario_credencial_usuario_id_credencial_id_Idx" ON usuario_credencial USING btree (usuario_id, credencial_id);





/************ Add Foreign Keys ***************/

/* Add Foreign Key: fk_bitacora_usuario */
ALTER TABLE bitacora ADD CONSTRAINT fk_bitacora_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_dato_usuario_usuario */
ALTER TABLE dato_usuario ADD CONSTRAINT fk_dato_usuario_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_usuario_credencial_credencial */
ALTER TABLE usuario_credencial ADD CONSTRAINT fk_usuario_credencial_credencial
	FOREIGN KEY (credencial_id) REFERENCES credencial (id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_usuario_credencial_usuario */
ALTER TABLE usuario_credencial ADD CONSTRAINT fk_usuario_credencial_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;


/************ Update: Schemas ***************/

COMMENT ON SCHEMA public IS NULL;